def maxconsum_accum(arr):
    resultMax = arr[0]
    counter = 0
    n = len(arr)

    for currentIdx in range(1,n):
        arr[currentIdx] = arr[currentIdx - 1] + arr[currentIdx]
        counter += 1
        if resultMax < arr[currentIdx]:
            resultMax = arr[currentIdx]
        
    # we obtain accumulated list arr
    for startIdx in range(n):
        head = arr[startIdx]
        for currentIdx in range(startIdx, n):
            arr[currentIdx] = arr[currentIdx] - head
            counter += 1
            if resultMax < arr[currentIdx]:
                resultMax = arr[currentIdx]
            
    return resultMax,counter
# [-2, -3, 4, -1, -2, 1, 5, -7]

# [-2, -5, 4, -1, -2, 1, 5, -7]
# [-2, -5, -1, -1, -2, 1, 5, -7]
# [-2, -5, -1, -2, -2, 1, 5, -7]
# [-2, -5, -1, -2, -4, 1, 5, -7]
# [-2, -5, -1, -2, -4, -3, 5, -7]
# [-2, -5, -1, -2, -4, -3, 2, -7]
# [-2, -5, -1, -2, -4, -3, 2, -5] [a0, a0+a1, a0+a1+a2 ....]
# **************
# [0, -5, -1, -2, -4, -3, 2, -5]  [0 , a0+a1, a0+a1+a2 ....]
# [0, -3, -1, -2, -4, -3, 2, -5]  [0 , a1   , a0+a1+a2 ....]
# [0, -3, 1, -2, -4, -3, 2, -5]   [0 , a1   ,    a1+a2 ....]
# [0, -3, 1, 0, -4, -3, 2, -5]
# [0, -3, 1, 0, -2, -3, 2, -5]
# [0, -3, 1, 0, -2, -1, 2, -5]
# [0, -3, 1, 0, -2, -1, 4, -5]
# [0, -3, 1, 0, -2, -1, 4, -3]    [0 , a1   ,    a1+a2,   a1+a2+a3, a1+a2+a3+a4, ....]
# **************
# [0, 0, 1, 0, -2, -1, 4, -3]     [0 , 0   ,    a1+a2,   a1+a2+a3, a1+a2+a3+a4, ....]
# [0, 0, 4, 0, -2, -1, 4, -3]     [0 , 0   ,       a2,   a1+a2+a3, a1+a2+a3+a4, ....]
# [0, 0, 4, 3, -2, -1, 4, -3]
# [0, 0, 4, 3, 1, -1, 4, -3]
# [0, 0, 4, 3, 1, 2, 4, -3]
# [0, 0, 4, 3, 1, 2, 7, -3]
# [0, 0, 4, 3, 1, 2, 7, 0]        [0 , 0   ,       a2,      a2+a3,    a2+a3+a4, ....]
# **************
# [0, 0, 0, 3, 1, 2, 7, 0]
# [0, 0, 0, -1, 1, 2, 7, 0]
# [0, 0, 0, -1, -3, 2, 7, 0]
# [0, 0, 0, -1, -3, -2, 7, 0]
# [0, 0, 0, -1, -3, -2, 3, 0]
# [0, 0, 0, -1, -3, -2, 3, -4]
# **************
# [0, 0, 0, 0, -3, -2, 3, -4]
# [0, 0, 0, 0, -2, -2, 3, -4]
# [0, 0, 0, 0, -2, -1, 3, -4]
# [0, 0, 0, 0, -2, -1, 4, -4]
# [0, 0, 0, 0, -2, -1, 4, -3]
# **************
# [0, 0, 0, 0, 0, -1, 4, -3]
# [0, 0, 0, 0, 0, 1, 4, -3]
# [0, 0, 0, 0, 0, 1, 6, -3]
# [0, 0, 0, 0, 0, 1, 6, -1]
# **************
# [0, 0, 0, 0, 0, 0, 6, -1]
# [0, 0, 0, 0, 0, 0, 5, -1]
# [0, 0, 0, 0, 0, 0, 5, -2]
# **************
# [0, 0, 0, 0, 0, 0, 0, -2]
# [0, 0, 0, 0, 0, 0, 0, -7]
# **************
# [0, 0, 0, 0, 0, 0, 0, 0]
# **************


if __name__ == "__main__":
    arr = [-2,-3,4]
    print(maxconsum_accum(arr))
    arr = [-2,-3,4]*10
    print(maxconsum_accum(arr))
    arr = [-2,-3,4]*100
    print(maxconsum_accum(arr))